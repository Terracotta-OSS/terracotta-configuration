<?xml version="1.0" encoding="UTF-8" ?>

<!--
  ~ The contents of this file are subject to the Terracotta Public License Version
  ~ 2.0 (the "License"); You may not use this file except in compliance with the
  ~ License. You may obtain a copy of the License at
  ~
  ~ http://terracotta.org/legal/terracotta-public-license.
  ~
  ~ Software distributed under the License is distributed on an "AS IS" basis,
  ~ WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License for
  ~ the specific language governing rights and limitations under the License.
  ~
  ~ The Covered Software is Terracotta Configuration.
  ~
  ~ The Initial Developer of the Covered Software is
  ~ Terracotta, Inc., a Software AG company
  ~
  -->

<xs:schema
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
    xmlns:tc="http://www.terracotta.org/config"
    targetNamespace="http://www.terracotta.org/config"
    elementFormDefault="qualified"
    version="${project.version}">

  <xs:element name="tc-config">
    <xs:complexType>
      <xs:all>
        <xs:element name="plugins" type="tc:services" minOccurs="0">
          <xs:annotation>
            <xs:documentation xml:lang="en">
              This section defines the list of plugins which are provided to the server by the platform.
              Each plugin provider defines their own schema and parsing responsiblity is left up to the plugin provider.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
        
        <xs:element name="entities" type="tc:entities" minOccurs="0">
          <xs:annotation>
            <xs:documentation xml:lang="en">
              This section defines the list of entities that have the lifecycle of the server.  Unlike entities created by 
              a client, these entities cannot be deleted.  
            </xs:documentation>
          </xs:annotation>
        </xs:element>
        
        <xs:element name="tc-properties" type="tc:tc-properties" minOccurs="0">
          <xs:annotation>
            <xs:documentation>
              This section defines the tc-properties
              which the user wants to set
              The order in which the properties would be overridden is the following
              tc-properties from the installation jar
              tc-properties from the tc-config
              tc-properties from local tc.properties file
              tc-properties set via system properties
              Note that the local tc.properties has higher
              preference than this section
            </xs:documentation>
          </xs:annotation>
        </xs:element>

        <xs:element name="servers" type="tc:servers" minOccurs="0">
          <xs:annotation>
            <xs:documentation>
              This section defines the servers present
              in your Terracotta system. You can omit
              this section entirely, in which case it
              behaves as if there's a single server
              with all values set at their default.
              You can include exactly one server entry
              here (the common case), or, if you're
              going to run multiple servers for
              failover, you can include multiple
              servers here.

              If you include more than one server
              here, note that each server will need to
              know which configuration it should use
              as it starts up. If you name your
              servers according to the host that they
              run on (and no host contains more than
              one server), then they will find the
              hostname themselves and work
              automatically.

              If you name your servers in any other
              fashion (and, again, only if there is
              more than one 'server' element present
              here), then you will need to pass the
              command-line option "-n <![CDATA[ <name>]]>"
              to the start-tc-server script, passing
              it the name of a server configuration
              from this file.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:all>
    </xs:complexType>
  </xs:element>

  <xs:complexType name="services">
    <xs:sequence minOccurs="0" maxOccurs="unbounded">
      <xs:choice>
        <xs:element name="config" type="tc:service"/>
        <xs:element name="service" type="tc:service"/>
      </xs:choice>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="entities">
    <xs:sequence minOccurs="0" maxOccurs="unbounded">
      <xs:element name="entity" type="tc:entity"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="service">
    <xs:choice>
      <xs:any namespace="##other" minOccurs="0" maxOccurs="1" processContents="skip"/>
    </xs:choice>
  </xs:complexType>
  
  <xs:complexType name="entity">
    <xs:sequence>
      <xs:element name="type" type="tc:qualified-class-name" minOccurs="1" maxOccurs="1" />
      <xs:element name="name" type="xs:string" minOccurs="1" maxOccurs="1"/>
      <xs:element name="version" type="tc:non-negative-int" minOccurs="1" maxOccurs="1"/>
      <xs:element name="configuration" minOccurs="0" maxOccurs="1"> 
        <xs:complexType>
            <xs:choice>
              <xs:any namespace="##other" minOccurs="0" maxOccurs="1" processContents="skip"/>
              <xs:element name="properties">
                  <xs:complexType>
                      <xs:sequence>
                          <xs:any minOccurs="0" maxOccurs="unbounded" processContents="skip"/>
                      </xs:sequence>
                  </xs:complexType>
              </xs:element>
            </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="tc-properties">
    <xs:sequence minOccurs="0" maxOccurs="unbounded">
      <xs:element name="property" type="tc:property">
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="property">
    <xs:attribute name="name" type="xs:string" use="required"/>
    <xs:attribute name="value" type="xs:string" use="required"/>
  </xs:complexType>
  
  <xs:complexType name="server">
    <xs:annotation>
      <xs:documentation xmlns="http://www.w3.org/1999/xhtml">
        Data specific to one of your servers.
      </xs:documentation>
    </xs:annotation>

    <xs:all>
      <xs:element name="logs" type="tc:path" minOccurs="0"
                  default="logs">
        <xs:annotation>
          <xs:documentation>
            In which directory should the server store its
            log files? Again, this value undergoes parameter
            substitution before being used; thus, a value
            like 'server-logs-%h' would expand to
            'server-logs-artichoke' if running on host
            'artichoke'.

            If this is a relative path, then it is
            interpreted relative to the current working
            directory of the server (that is, the directory
            you were in when you started server). It is thus
            recommended that you specify an absolute path
            here.

            Default: 'logs'

            This places the 'logs' directory in the
            directory you were in when you invoked
            'start-tc-server'.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      
      <xs:element name="tsa-port" type="tc:bind-port" minOccurs="0" maxOccurs="1"
                  default="9510">
        <xs:annotation>
          <xs:documentation>
            On what port should the server listen for
            connections from clients? This can be any
            port you like, but note that ports below 1024
            typically require 'root' privileges to use on
            Unix-style systems (Linux, Solaris).

            Default:9510
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="management-port" type="tc:bind-port" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            On what port should the server listen for
            http/https connections for management?
            This can be any port you like, but note
            that ports below 1024 typically require 'root'
            privileges to use on Unix-style systems (Linux,
            Solaris).

            Default: "tsa-port" + 30
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="tsa-group-port" type="tc:bind-port" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Port for server to server communication.
            This can be any port you like, but note that ports
            below 1024 typically require 'root' privileges to
            use on Unix-style systems (Linux, Solaris).

            Default: "tsa-port" + 20
          </xs:documentation>
        </xs:annotation>
      </xs:element>

    </xs:all>

    <xs:attribute name="host" type="tc:host" use="optional">
      <xs:annotation>
        <xs:documentation>
          The host that the server runs on, expansion parameters
          may be used in this attribute.  Defaults to "%i" (the
          machine IP address).
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="name" type="tc:non-blank-token"
                  use="optional">
      <xs:annotation>
        <xs:documentation>
          The symbolic name of the server, expansion parameters may
          be used.  Defaults to "host:tsa-port".
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="bind" type="tc:non-blank-token" use="optional" default="0.0.0.0">
      <xs:annotation>
        <xs:documentation>
          The address this server should bind its network listeners to. By default network listeners
          will be available on all local addresses (ie. 0.0.0.0)
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="servers">
    <xs:sequence maxOccurs="1" minOccurs="0">
      <xs:element name="server" type="tc:server" maxOccurs="unbounded" minOccurs="0" />
      <xs:element name="client-reconnect-window" type="tc:non-negative-int" minOccurs="0" maxOccurs="1" default="120" />
    </xs:sequence>
    <xs:attribute name="secure" type="xs:boolean" use="optional" default="false" />
  </xs:complexType>

  <xs:complexType name="bind-port">
    <xs:simpleContent>
      <xs:extension base="tc:port">
        <xs:attribute name="bind" type="tc:non-blank-token" use="optional">
          <xs:annotation>
            <xs:documentation>
              The address this server should bind its network listeners to. By default network listeners
              will be available on all local addresses (ie. 0.0.0.0)
            </xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:simpleType name="non-blank-token">
    <xs:restriction base="xs:token">
      <xs:minLength value="1" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="path">
    <xs:annotation>
      <xs:documentation>
        Several different predefined substitutions are available
        for your use:

        %h expands to the fully-qualified host name of the
        machine running your application

        %i expands to the IP adress of the machine running
        your application

        %H refers to the home directory of the user running
        running your application

        %n refers to the username of the user running
        running your application

        %o refers to the name of the operating system
        running your application

        %a refers to the processor architecture of the
        machine running running your application %v refers
        to the version of the operating system running
        running your application

        %t refers to the temporary directory of the machine
        running your application(on Linux or Solaris, e.g.,
        /tmp)

        %(property) refers to the java system property of
        the JVM running on the machine(e.g. %(java.home) )
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:minLength value="1" />
    </xs:restriction>
  </xs:simpleType>


  <xs:simpleType name="fixed-string-unlimited">
    <xs:restriction base="xs:token">
      <xs:enumeration value="unlimited" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="fixed-string-none">
    <xs:restriction base="xs:token">
      <xs:enumeration value="none" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="positive-int">
    <xs:restriction base="xs:positiveInteger">
      <xs:maxInclusive value="2147483647" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="non-negative-int">
    <xs:restriction base="xs:nonNegativeInteger">
      <xs:maxInclusive value="2147483647" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="positive-int-or-none">
    <xs:union memberTypes="tc:positive-int tc:fixed-string-none" />
  </xs:simpleType>

  <xs:simpleType name="port">
    <xs:restriction base="xs:nonNegativeInteger">
      <xs:minInclusive value="0" />
      <xs:maxInclusive value="65535" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="host">
    <xs:restriction base="xs:string">
      <xs:whiteSpace value="collapse" />
      <xs:minLength value="1" />
      <xs:maxLength value="255" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="qualified-class-name">
    <xs:restriction base="xs:token">
      <xs:pattern
          value="[A-Za-z_][A-Za-z_0-9$]*(\.[A-Za-z_][A-Za-z_0-9$]*)*" />
    </xs:restriction>
  </xs:simpleType>

</xs:schema>
